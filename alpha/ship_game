

class ShipGame
{
  // members
  Ship player1 = new Ship();
  Ship player2 = new Ship();
  ArrayList <Bullet> bullets = new ArrayList<Bullet>();
  
  int cooldown;
  int prevMillisP1, prevMillisP2;
  float w, h;
  boolean p1Shooting, p2Shooting;
  
  
  
  
  
  // constructor
  ShipGame() {
    cooldown = 500;
    p1Shooting = false;
    p2Shooting = false;
  }
  
  
  
  
  
  // methods
  void drawShipGame() {
    player1.drawShip();
    player2.drawShip();
    shoot();
    drawBullets();
    
    //println(p1Shooting, p2Shooting);
    //println(player2.x, player2.y);
  }
  
  void shoot() {
    if (p1Shooting && !player1.dead) {
      if (millis() + cooldown - prevMillisP1 >= cooldown) {
        bullets.add(new Bullet(player1.x + player1.shipW / 1.5, player1.y, 'r'));
        prevMillisP1 = millis() + cooldown;
      }
    }
    
    if (p2Shooting && !player2.dead) {
      if (millis() + cooldown - prevMillisP2 >= cooldown) {
        bullets.add(new Bullet(player2.x - player2.shipW / 1.5, player2.y, 'l'));
        prevMillisP2 = millis() + cooldown;
      }
    }
  }
  
  
  
  void p1Shoot() {
    p1Shooting = true;
  }
  
  void p1StopShoot() {
    p1Shooting = false;
  }
  
  void p2Shoot() {
    p2Shooting = true;
  }
  
  void p2StopShoot() {
    p2Shooting = false;
  }
  
  
  
  void drawBullets() {
    for (int i = 0; i < bullets.size(); i++) {
      bullets.get(i).drawBullet();
        
      float bx = bullets.get(i).x;
      float by = bullets.get(i).y;
      float bw = bullets.get(i).bulletW;
      float bh = bullets.get(i).bulletH;
      
      if (bx + (bw / 2) < 0 || bx - (bw / 2) > w) {
        bullets.remove(i);
        i = 0;
      }
      if (player1.inHitBox(bx, by, bw, bh) && !player1.dead) {
        bullets.remove(i);
        i = 0;
        
        player1.hit();
      }
      
      if (player2.inHitBox(bx, by, bw, bh) && !player2.dead) {
        bullets.remove(i);
        i = 0;
        
        player2.hit();
      }
    }
  }
  
  void init(int windowWidth, int windowHeight) {
    w = windowWidth;
    h = windowHeight;
    initP1();
    initP2();
  }
  
  void initP1() {
    player1.init(w, h, w / 4, h / 2);
    player1.setBorder(0, h, 0, w / 2);
  }
  
  void initP2() {
    player2.init(w, h, w * 3 / 4, h / 2);
    player2.setBorder(0, h, w / 2, w);
  }
  
  void p1ThrustOn(char dir) {
    player1.thrustOn(dir);
  }
  
  void p1ThrustOff(char dir) {
    player1.thrustOff(dir);
  }
  
  void p2ThrustOn(char dir) {
    player2.thrustOn(dir);
  }
  
  void p2ThrustOff(char dir) {
    player2.thrustOff(dir);
  }
}
